<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on jdhao&#39;s blog</title>
    <link>https://jdhao.github.io/categories/Python/</link>
    <description>Recent content in Python on jdhao&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>jdhao</copyright>
    <lastBuildDate>Sun, 07 Jun 2020 20:02:18 +0800</lastBuildDate>
    
	<atom:link href="https://jdhao.github.io/categories/Python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Use Asyncio in Flask Applications</title>
      <link>https://jdhao.github.io/2020/06/07/asyncio_inside_flask/</link>
      <pubDate>Sun, 07 Jun 2020 20:02:18 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/06/07/asyncio_inside_flask/</guid>
      <description>&lt;p&gt;I was using asyncio inside a view function for Flask to run some asynchronous
function and met an error.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Use Unified Logging Config Across the Project</title>
      <link>https://jdhao.github.io/2020/04/24/python_logging_for_multiple_modules/</link>
      <pubDate>Fri, 24 Apr 2020 01:12:43 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/04/24/python_logging_for_multiple_modules/</guid>
      <description>&lt;p&gt;When we are working on a project, we often need to log some message for easier
debugging. How do we configure the logging settings once and use it across the
project?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Get Current Time with Time Zone Info in Python</title>
      <link>https://jdhao.github.io/2020/04/17/python_datetime_timezone/</link>
      <pubDate>Fri, 17 Apr 2020 21:54:48 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/04/17/python_datetime_timezone/</guid>
      <description>&lt;p&gt;I am trying to generate a custom time format using the Python &lt;code&gt;datetime&lt;/code&gt;
package. My original code is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; %H:%M:%S%z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Build Web API with Flask --- Work with JSON-like Dict</title>
      <link>https://jdhao.github.io/2020/04/13/build_webapi_with_flask_s3/</link>
      <pubDate>Mon, 13 Apr 2020 22:29:23 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/04/13/build_webapi_with_flask_s3/</guid>
      <description>&lt;p&gt;This is a simple post about how to send JSON-like Dict data to a Flask server
via &lt;a href=&#34;https://requests.readthedocs.io/en/master/&#34;&gt;requests&lt;/a&gt; package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build Web API with Flask -- Post and Receive Image</title>
      <link>https://jdhao.github.io/2020/04/12/build_webapi_with_flask_s2/</link>
      <pubDate>Sun, 12 Apr 2020 20:11:52 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/04/12/build_webapi_with_flask_s2/</guid>
      <description>&lt;p&gt;In this post, I want to write about how to build a simple image processing web
API that returns the size of an image. The topics include how to build this web
API with Flask and how to post image to this web API and get response.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build A Web API Service Using Flask -- The Basics</title>
      <link>https://jdhao.github.io/2020/04/06/build_webapi_with_flask_s1/</link>
      <pubDate>Mon, 06 Apr 2020 22:05:07 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/04/06/build_webapi_with_flask_s1/</guid>
      <description>&lt;p&gt;Web API is a kind of web application. Simply put, web APIs are built for other
applications to query info from the web server. For Python,
&lt;a href=&#34;https://flask.palletsprojects.com/en/1.1.x/&#34;&gt;Flask&lt;/a&gt; package can be used to
build web applications. In this post, I want to share how to build web APIs
with the help of Flask.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Conversion between base64 and OpenCV or PIL Image</title>
      <link>https://jdhao.github.io/2020/03/17/base64_opencv_pil_image_conversion/</link>
      <pubDate>Tue, 17 Mar 2020 23:08:32 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/03/17/base64_opencv_pil_image_conversion/</guid>
      <description>&lt;p&gt;When we are building web services using Python, we often send or receive images
in &lt;a href=&#34;https://docs.python.org/3/library/base64.html&#34;&gt;base64&lt;/a&gt; encoded format.
However, when we are doing image processing tasks, we need to use PIL or
OpenCV. In this post, I will share how to convert between OpenCV or PIL image
and base64 encoded image.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决 Matplotlib 使用中文乱码问题</title>
      <link>https://jdhao.github.io/2020/02/22/guide-on-how-to-use-chinese-with-matplotlib_zh/</link>
      <pubDate>Sat, 22 Feb 2020 11:41:09 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2020/02/22/guide-on-how-to-use-chinese-with-matplotlib_zh/</guid>
      <description>&lt;p&gt;注：这是一篇&lt;a href=&#34;https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/&#34;&gt;旧文&lt;/a&gt;的中文翻译版本。&lt;/p&gt;
&lt;p&gt;前不久，我在使用 Matplotlib 画图的时候，发现一些 Unicode 字符(例如，汉字) 无法正常显示：在生成的图片中，汉字是乱码的，显示为一个方框。经过大量的查找和阅读，我终于明白了如何在使用 Matplotlib 时，正确渲染 Unicode 字符&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pylint: command not found?</title>
      <link>https://jdhao.github.io/2019/11/28/pylint_command_not_found/</link>
      <pubDate>Thu, 28 Nov 2019 01:21:54 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/11/28/pylint_command_not_found/</guid>
      <description>&lt;p&gt;The system I am currently using has Anaconda pre-installed by root under system
locations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to sort a list of tuple or list in Python -- lambda or itemgetter?</title>
      <link>https://jdhao.github.io/2019/11/06/python_sort_list_of_list/</link>
      <pubDate>Wed, 06 Nov 2019 22:43:59 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/11/06/python_sort_list_of_list/</guid>
      <description>&lt;p&gt;In Python, when we want to sort a list of tuples or lists, we may want to sort
it based on certain element in each sub-list, for example, sort the list based
on the first element in each sub-list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Convert Python Script to Exe on Windows with Pyinstaller</title>
      <link>https://jdhao.github.io/2019/10/14/python_script_to_exe/</link>
      <pubDate>Mon, 14 Oct 2019 21:46:55 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/10/14/python_script_to_exe/</guid>
      <description>&lt;h1 id=&#34;introduction-&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I have a use case where I want to convert my Python script to standalone
executable so that I do not need to type &lt;code&gt;python&lt;/code&gt; before it to run the script.
On Linux, it is easy to achieve with the help of
&lt;a href=&#34;https://stackoverflow.com/questions/6908143/should-i-put-shebang-in-python-scripts-and-what-form-should-it-take&#34;&gt;shebang&lt;/a&gt;.
However, on Windows, it does not work. Then I thought I might convert the
script to Windows executable.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Read and Write Images with Unicode Paths in OpenCV</title>
      <link>https://jdhao.github.io/2019/09/11/opencv_unicode_image_path/</link>
      <pubDate>Wed, 11 Sep 2019 00:23:41 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/09/11/opencv_unicode_image_path/</guid>
      <description>&lt;p&gt;The other day, when I was using OpenCV to read some images and print the image
shape, I got an error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lsquo;NoneType&amp;rsquo; object has no attribute &amp;lsquo;shape&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was confused and do not know why since the image path is valid. It tooks me a
while to understand the cause.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JPEG Image Quality in PIL</title>
      <link>https://jdhao.github.io/2019/07/20/pil_jpeg_image_quality/</link>
      <pubDate>Sat, 20 Jul 2019 21:19:39 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/07/20/pil_jpeg_image_quality/</guid>
      <description>&lt;h1 id=&#34;introduction-&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The other day, I was haunted by a bug and found that it was an issue with the
image quality saved by &lt;a href=&#34;https://pillow.readthedocs.io/en/stable/&#34;&gt;Pillow&lt;/a&gt; after
spending a few hours debugging the code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Convert PIL or OpenCV Image to Bytes without Saving to Disk</title>
      <link>https://jdhao.github.io/2019/07/06/python_opencv_pil_image_to_bytes/</link>
      <pubDate>Sat, 06 Jul 2019 22:18:22 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/07/06/python_opencv_pil_image_to_bytes/</guid>
      <description>&lt;h1 id=&#34;introduction-&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Sometimes, we may want an in-memory jpg or png image that is represented as
binary data. But often, what we have got is image in OpenCV (Numpy ndarray) or
PIL Image format. In this post, I will share how to convert Numpy image or PIL
Image object to binary data without saving the underlying image to disk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python glob Module Case Sensitivity</title>
      <link>https://jdhao.github.io/2019/06/24/python_glob_case_sensitivity/</link>
      <pubDate>Mon, 24 Jun 2019 17:19:33 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/06/24/python_glob_case_sensitivity/</guid>
      <description>&lt;p&gt;Recently, I was bitten by the unintuitive behaviour of &lt;code&gt;glob.glob()&lt;/code&gt; and I
think it would be beneficial to write down what I have found.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Manipulating Images with Alpha Channels in Pillow</title>
      <link>https://jdhao.github.io/2019/03/07/pillow_image_alpha_channel/</link>
      <pubDate>Thu, 07 Mar 2019 16:21:57 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/03/07/pillow_image_alpha_channel/</guid>
      <description>&lt;p&gt;In image processing, &lt;a href=&#34;https://www.makeuseof.com/tag/alpha-channel-images-mean/&#34;&gt;alpha
channel&lt;/a&gt; is usually
used to control the transparency of an image. In itself, the alpha channel is
just a gray level image&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. In this post, I want to talk about how to add an
alpha channel to RGB image and show it using the Pillow package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cropping Rotated Rectangles from Image with OpenCV</title>
      <link>https://jdhao.github.io/2019/02/23/crop_rotated_rectangle_opencv/</link>
      <pubDate>Sat, 23 Feb 2019 01:14:26 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/02/23/crop_rotated_rectangle_opencv/</guid>
      <description>&lt;p&gt;In computer vision tasks, we need to crop a rotated rectangle from the original
image sometimes, for example, to crop a rotated text box. In this post, I would
like to introduce how to do this in OpenCV.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Debug Python Code in Terminal</title>
      <link>https://jdhao.github.io/2019/01/16/debug_python_in_terminal/</link>
      <pubDate>Wed, 16 Jan 2019 10:21:12 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2019/01/16/debug_python_in_terminal/</guid>
      <description>&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;https://blog-resource-1257868508.file.myqcloud.com/20190116225245.jpg&#34; width=&#34;600&#34;&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Two Issues Related to ImageFont Module in PIL</title>
      <link>https://jdhao.github.io/2018/12/04/two_issues_related_to_imagefont_pillow/</link>
      <pubDate>Tue, 04 Dec 2018 22:48:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/12/04/two_issues_related_to_imagefont_pillow/</guid>
      <description>&lt;p&gt;In this post, I want to write about two issues related to the
&lt;a href=&#34;https://pillow.readthedocs.io/en/5.1.x/reference/ImageFont.html&#34;&gt;ImageFont&lt;/a&gt;
module in the &lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;PIL&lt;/a&gt; package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading and Writing Text Files on Windows</title>
      <link>https://jdhao.github.io/2018/12/03/text_file_read_write_on_windows/</link>
      <pubDate>Mon, 03 Dec 2018 13:06:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/12/03/text_file_read_write_on_windows/</guid>
      <description>&lt;p&gt;If you are using Python 3 on Windows, you may have seen a Unicode decoding
error when opening files in UTF-8 format:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnicodeDecodeError: &amp;lsquo;gbk&amp;rsquo; codec can&amp;rsquo;t decode byte 0xaf in position 5: illegal multibyte sequence&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you read the same file on Linux or MacOS, you will find that this file can
be opened without any error. Why is there a difference? It has something to do
with the default encoding Python chooses to use on different platforms.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Simple Guide on How to Use the Python Logging Module</title>
      <link>https://jdhao.github.io/2018/10/12/python_logging_module/</link>
      <pubDate>Fri, 12 Oct 2018 22:13:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/10/12/python_logging_module/</guid>
      <description>&lt;p&gt;In the past, I often use plain &lt;code&gt;print()&lt;/code&gt; to display some statistics during
training process of my models. However, it is not convenient to save the
statistics in a file for later inspection. Once the program is finished, we do
not have an overview of the training process. I am aware that there are
packages such as &lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;tensorboardX&lt;/a&gt; and
&lt;a href=&#34;https://github.com/facebookresearch/visdom&#34;&gt;visdom&lt;/a&gt;, which are specifically
designed for inspecting the various statistics during training. Right now, I
would rather keep the program plain simple and usable. So I decided to give
&lt;a href=&#34;https://docs.python.org/3/library/logging.html&#34;&gt;Python logging pacakge&lt;/a&gt; a try.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set up the Default Value for Boolean Option in Argparse</title>
      <link>https://jdhao.github.io/2018/10/11/python_argparse_set_boolean_params/</link>
      <pubDate>Thu, 11 Oct 2018 16:33:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/10/11/python_argparse_set_boolean_params/</guid>
      <description>&lt;p&gt;TL;DR&lt;/p&gt;
&lt;p&gt;If you want to set a parameter&amp;rsquo;s default value to &lt;code&gt;True&lt;/code&gt; using argparse, use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;parser.add_argument(&amp;#39;--param&amp;#39;, action=&amp;#39;store_false&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise, use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;parser.add_argument(&amp;#39;--param&amp;#39;, action=&amp;#39;store_true&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to Change Intersection Point of X and Y Axis in Matplotlib</title>
      <link>https://jdhao.github.io/2018/05/21/matplotlib-change-axis-intersection-point/</link>
      <pubDate>Mon, 21 May 2018 11:02:09 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/05/21/matplotlib-change-axis-intersection-point/</guid>
      <description>In this post, I will share how to position the intersection of x and y axis at a specific point using Matplotlib.
The spines In order to re-position x and y axis, we need to understand an important concept in Matplotlib &amp;mdash;spines. According to Matplotlib documentation:
 Spines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions.</description>
    </item>
    
    <item>
      <title>How to Read and Write CSV Files in Python</title>
      <link>https://jdhao.github.io/2018/05/13/read-write-csv-file-with-header/</link>
      <pubDate>Sun, 13 May 2018 21:24:42 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/05/13/read-write-csv-file-with-header/</guid>
      <description>In this post, I will summarize the most convenient way to read and write CSV files (with or without headers) in Python.
Write CSV files Python has a built-in CSV module which deals with CSV files. In order to write to files in CSV format, we first build a CSV writer and then write to files using this writer. I will give a simple example below:
import csv lines = [[&amp;#39;Bob&amp;#39;, &amp;#39;male&amp;#39;, &amp;#39;27&amp;#39;], [&amp;#39;Smith&amp;#39;, &amp;#39;male&amp;#39;, &amp;#39;26&amp;#39;], [&amp;#39;Alice&amp;#39;, &amp;#39;female&amp;#39;, &amp;#39;26&amp;#39;]] header = [&amp;#39;name&amp;#39;, &amp;#39;gender&amp;#39;, &amp;#39;age&amp;#39;] with open(&amp;#34;test.</description>
    </item>
    
    <item>
      <title>How to Plot Unicode Characters with Matplotlib</title>
      <link>https://jdhao.github.io/2018/04/08/matplotlib-unicode-character/</link>
      <pubDate>Sun, 08 Apr 2018 22:33:46 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/04/08/matplotlib-unicode-character/</guid>
      <description>&lt;p&gt;This is a post which follows up my previous post on &lt;a href=&#34;https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/&#34;&gt;how to use Chinese
characters with
Matplotlib&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How To Put Legend outside of Axes Properly in Matplotlib?</title>
      <link>https://jdhao.github.io/2018/01/23/matplotlib-legend-outside-of-axes/</link>
      <pubDate>Tue, 23 Jan 2018 14:51:45 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/01/23/matplotlib-legend-outside-of-axes/</guid>
      <description>&lt;p&gt;When we want to put legend somewhere in a figure using Matplotlib, most of the
time, the option &lt;code&gt;loc=&#39;best&#39;&lt;/code&gt; will produce the desired results. However,
sometimes, we may want to have finer control over where the legend should be in
the image. For example, we may want to put the legend outside of the axes,
which is impossible using &lt;code&gt;loc=&#39;best&#39;&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Working with Fonts in Matplotlib</title>
      <link>https://jdhao.github.io/2018/01/18/mpl-plotting-notes-201801/</link>
      <pubDate>Thu, 18 Jan 2018 21:13:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2018/01/18/mpl-plotting-notes-201801/</guid>
      <description>&lt;p&gt;This post continues my &lt;a href=&#34;https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/&#34;&gt;previous post&lt;/a&gt;
on various tips and tricks collected during the process of using Matplotlib.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog-resource-1257868508.file.myqcloud.com/18-1-18/39303776.jpg&#34;
title=&#34;Different math symbols produced by Matplotlib and LaTeX&#34;
style=&#34;float: middle;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matplotlib Plotting Notes -- Series 1</title>
      <link>https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/</link>
      <pubDate>Thu, 16 Nov 2017 21:41:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/</guid>
      <description>&lt;p&gt;This post records my collected notes on various tricks in using Matplotlib.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Resize, Pad Image to Square Shape and Keep Its Aspect Ratio in Python</title>
      <link>https://jdhao.github.io/2017/11/06/resize-image-to-square-with-padding/</link>
      <pubDate>Mon, 06 Nov 2017 10:00:45 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2017/11/06/resize-image-to-square-with-padding/</guid>
      <description>&lt;p&gt;When we are using convolutional neural networks, most of the time, we need to
fix the input image size to feed it to the network. The usual practice is to
resize the input image to the given size (the image aspect ratio is no longer
kept) and then crop a fixed size patch randomly from the resized image. This
practice may work well for image classification where fine details may not be
necessary. But for Image retrieval, we want to keep the image aspect ration
unchanged. In this post, I will summarize ways to resize an image to square
shape with padding and keep its aspect ratio.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Plot Only One Colorbar for Multiple Plot Using Matplotlib</title>
      <link>https://jdhao.github.io/2017/06/11/mpl_multiplot_one_colorbar/</link>
      <pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jdhao.github.io/2017/06/11/mpl_multiplot_one_colorbar/</guid>
      <description>&lt;p&gt;In some situations, we have several subplots and we want to use only one
colorbar for all the subplots. How to do this in Matplotlib?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Set the Aspect Ratio of Image (or Axes) in Matplotlib?</title>
      <link>https://jdhao.github.io/2017/06/03/change-aspect-ratio-in-mpl/</link>
      <pubDate>Sat, 03 Jun 2017 00:58:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2017/06/03/change-aspect-ratio-in-mpl/</guid>
      <description>&lt;p&gt;In Matplotlib, &lt;a href=&#34;https://matplotlib.org/api/axes_api.html&#34;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; is the primary place where we put plot elements, such as lines, texts and legends. However, for a long time, I failed to grasp the meaning of aspect ratio in Matplotlib, thus was constantly frustrated by the behavior of Maplotlib every time I attempted to change the aspect ratio of a plot. This post is the result of my attempt to understand it and my findings. Hope it can help you too.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Guide on Using Unicode Characters in Matplotlib</title>
      <link>https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/</link>
      <pubDate>Sat, 13 May 2017 21:36:26 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/</guid>
      <description>&lt;p&gt;A few days ago, I found that Matplotlib can not show some Unicode characters
(some Chinese characters) using its default settings. In the rendered output
image, Chinese characters are shown as blank boxes. After reading a lot of
posts on this issue, I am finally clear about how to use Unicode characters
properly in Matplotlib.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Commonly-used Methods in Python OS Package</title>
      <link>https://jdhao.github.io/2016/03/17/common_methon_in_python_os_module/</link>
      <pubDate>Thu, 17 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jdhao.github.io/2016/03/17/common_methon_in_python_os_module/</guid>
      <description>&lt;p&gt;In this post I summarize the commonly-used methods in Python os package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows 系统下 Python 以及 Pip 的安装和使用</title>
      <link>https://jdhao.github.io/2015/10/21/python-pip-install/</link>
      <pubDate>Wed, 21 Oct 2015 14:29:00 +0800</pubDate>
      
      <guid>https://jdhao.github.io/2015/10/21/python-pip-install/</guid>
      <description>&lt;p&gt;本文主要介绍在 Windows 系统下，如何安装 Python 和 Pip, 以及 Pip 的简单使用。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>